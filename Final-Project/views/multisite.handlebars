<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="multisite-title-box">
                <h1 class="secondary-title multisite-title">check multiple sites</h1>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="multisite-form-box">
                <form action="/multisite" method="POST" enctype="multipart/form-data" onsubmit="return Validate(this);">
                    <div class="form-group first-row">
                        <div class="custom-file mb-3">
    {{!-- <input type="file" class="custom-file-input" id="validatedCustomFile" required>
    <label class="custom-file-label" for="validatedCustomFile">Choose file...</label>
    <div class="invalid-feedback">Example invalid custom file feedback</div>
  </div> --}}
                            <input type="file" class="custom-file-input" name="uploadedFile" id="fileUpload" hidden required/>
                            <label for="fileUpload" id="fileLabel">Choose a File</label>
                        <input type="submit" value="Upload" class="btn upload">
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>





<form action="/multisite" method='POST' enctype="multipart/form-data" onsubmit="return Validate(this);">
    <span>Upload Profile Picture:</span>   
    <input type="file" name="uploadedFile" required/> <br> 
    <input type="submit" value="submit">  
</form>


<h2>Your file ({{result}}) has been uploaded</h2>
<h3><a href="/renderfile">Check Results</a></h3>

<script>
    var _validFileExtensions = [".pdf", ".jpeg", ".bmp", ".gif", ".csv"];    
function Validate(oForm) {
    var arrInputs = oForm.getElementsByTagName("input");
    for (var i = 0; i < arrInputs.length; i++) {
        var oInput = arrInputs[i];
        if (oInput.type == "file") {
            var sFileName = oInput.value;
            if (sFileName.length > 0) {
                var blnValid = false;
                for (var j = 0; j < _validFileExtensions.length; j++) {
                    var sCurExtension = _validFileExtensions[j];
                    if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                        blnValid = true;
                        break;
                    }
                }
                
                if (!blnValid) {
                    alert("Sorry, " + sFileName + " is invalid, allowed extensions are: " + _validFileExtensions.join(", "));
                    return false;
                }
            }
        }
    }
  
    return true;
}
</script>